"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8098],{3130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=t(4848),s=t(8453);const a={sidebar_position:1},i="Schemas",o={id:"main-system/view-manager/schemas",title:"Schemas",description:"View Manager component needs to have access to the database and it registers multiple schemas:",source:"@site/docs/main-system/view-manager/schemas.md",sourceDirName:"main-system/view-manager",slug:"/main-system/view-manager/schemas",permalink:"/storageSystemDocs/docs/main-system/view-manager/schemas",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/main-system/view-manager/schemas.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mainSystemSidebar",previous:{title:"Introduction",permalink:"/storageSystemDocs/docs/main-system/view-manager/introduction"},next:{title:"Requirements On Source Code",permalink:"/storageSystemDocs/docs/main-system/view-manager/requirements-on-source-code"}},c={},d=[{value:"ProfilePermission Schema",id:"profilepermission-schema",level:3},{value:"ViewTemplateMetadata Schema",id:"viewtemplatemetadata-schema",level:3},{value:"ViewInstance Schema",id:"viewinstance-schema",level:3}];function m(e){const n={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"schemas",children:"Schemas"}),"\n",(0,r.jsx)(n.p,{children:"View Manager component needs to have access to the database and it registers multiple schemas:"}),"\n",(0,r.jsx)(n.h3,{id:"profilepermission-schema",children:"ProfilePermission Schema"}),"\n",(0,r.jsxs)(n.p,{children:["Each ",(0,r.jsx)(n.code,{children:"View Template"})," needs to have profiles specified so that when ",(0,r.jsx)(n.code,{children:"View Instance"})," is created out of it, ",(0,r.jsx)(n.code,{children:"View Manager"})," can request permissions from the ",(0,r.jsx)(n.code,{children:"Auth Service"})," for the given ",(0,r.jsx)(n.code,{children:"View Instance"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"View Template"})," therefore holds which profiles future instances will have access to but also what kind of access. This cannot be changed after the ",(0,r.jsx)(n.code,{children:"View Template"})," is created."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="ProfilePermissionSchema.js"',children:"\r\nconst ProfilePermissionSchema = new mongoose.Schema({\r\n  profile: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  read: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  create: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  modify: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  delete: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"viewtemplatemetadata-schema",children:"ViewTemplateMetadata Schema"}),"\n",(0,r.jsxs)(n.p,{children:["This schema is pretty straightforward. One thing to point out is ",(0,r.jsx)(n.code,{children:"sourceCodeId"}),". This is the id of the uploaded source code from the given execution service such as ",(0,r.jsx)(n.code,{children:"Javascript Execution Service"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="ViewTemplateMetadataSchema.js"',children:"\r\nconst ProfilePermissionSchema = require('./ProfilePermissionSchema');\r\n\r\nconst ViewTemplateMetadataSchema = new mongoose.Schema({\r\n  runtime: {\r\n    type: String,\r\n    required: true\r\n  },\r\n}, {_id: false}); // _id is set to false so that Mongoose does not create an _id for the nested object\r\n\r\nconst ViewTemplateSchema = new mongoose.Schema({\r\n  templateName: {\r\n    type: String,\r\n    required: true,\r\n    unique: true\r\n  },\r\n  sourceCodeId: { // id for the uploaded code. this is because the uploaded code will be saved directly in the services so the view manager needs to know which code to call\r\n    type: String,\r\n    required: true\r\n  },\r\n  metadata: {\r\n    type: ViewTemplateMetadataSchema,\r\n    required: true\r\n  },\r\n  createdDate: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n  profiles: { // a list of needed profiles. When a ViewInstance is created, permissions for these profiles are created. Tokens to these profiles\r\n    type: [ProfilePermissionSchema],\r\n    required: true\r\n  },\r\n});\r\n\r\nconst ViewTemplate = mongoose.model('ViewTemplate', ViewTemplateSchema);\r\n\r\nmodule.exports = {\r\n  ViewTemplateMetadataSchema,\r\n  ViewTemplate\r\n};\r\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"viewinstance-schema",children:"ViewInstance Schema"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="ViewInstanceSchema.js"',children:"\r\nconst ViewInstanceSchema = new mongoose.Schema({\r\n  viewTemplate: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: 'ViewTemplate',\r\n      required: true\r\n  },\r\n  createdDate: {\r\n      type: Date,\r\n      default: Date.now\r\n  },\r\n  accessTokensToProfiles: { // tokens to profiles defined in ViewTemplate ( keys must be the profile names defined in \"profiles\" in ViewTemplateSchema)\r\n      type: Object\r\n  },\r\n  configuration: {\r\n    type: Object,\r\n    required: true,\r\n        default: {}\r\n  }\r\n});\r\n\r\nconst ViewInstance = mongoose.model('ViewInstance', ViewInstanceSchema);\r\n\r\nmodule.exports = ViewInstance;\r\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now that you have a general idea of what kind of db access this component requires, you can move on to Requirements imposed on the View Template's source code."})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);